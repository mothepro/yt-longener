{"version":3,"file":"index.js","sourceRoot":"","sources":["../../index.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,MAAM,CAAC,UAAmB,EAAE,OAAO,GAAG,iBAAiB;IACrE,IAAI,CAAC,UAAU;QAAE,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;AAC3C,CAAC;AACD,MAAM,UAAU,aAAa,CAAI,UAAa,EAAE,OAAgB;IAC9D,MAAM,CAAC,UAAU,IAAI,IAAI,EAAE,OAAO,CAAC,CAAA;IACnC,OAAO,UAAU,CAAA;AACnB,CAAC;AAED,IAAI;IACF,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAA;IACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,4CAA4C,CAAC,CAAA;IAClF,MAAM,CAAC,EAAE,EAAE,CAAC,GAAG,aAAa,CAC1B,QAAQ,CAAC,KAAK,CAAC,kCAAkC,CAAC,EAClD,+BAA+B,CAChC,CAAA;IAED,QAAQ,CAAC,IAAI,GAAG,oBAAoB,EAAE,EAAE,CAAA;CACzC;AAAC,OAAO,GAAG,EAAE;IACZ,MAAM,CAAC,GAAG,YAAY,KAAK,CAAC,CAAA;IAC5B,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;CACnB","sourcesContent":["export function assert(expression: unknown, message = 'Assertion Error'): asserts expression {\r\n  if (!expression) throw new Error(message)\r\n}\r\nexport function assertNotNull<T>(expression: T, message?: string): NonNullable<T> {\r\n  assert(expression != null, message)\r\n  return expression\r\n}\r\n\r\ntry {\r\n  const { host, pathname } = location\r\n  assert(host.includes('youtube.com'), 'Must be on youtube to use this bookmarklet')\r\n  const [, id] = assertNotNull(\r\n    pathname.match(/\\/[a-zA-Z0-9_]+\\/([a-zA-Z0-9_]+)/),\r\n    'Can not find youtube video id'\r\n  )\r\n\r\n  location.href = `https://youtu.be/${id}`\r\n} catch (err) {\r\n  assert(err instanceof Error)\r\n  alert(err.message)\r\n}\r\n"]}